# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        # Option3: partial declaration with bind
          #bind:
          #  $omdbToken: aaa
          #  $omdbHost: https://www.omdbapi.com

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    #
    # Option2: Partial declaration
    App\OmdbApi:
      arguments:
        $omdbHost: '%env(OMDB_HOST)%'
        $omdbToken: '%env(OMDB_TOKEN)%'
        #$omdbHost: https://www.omdbapi.com
        #$omdbToken: 28c5b7b1

    # Option1: Explicitly declare a service
    #App\OmdbApi:
    #  arguments:
    #    $omdbClient: '@Symfony\Contracts\HttpClient\HttpClientInterface'
    #    $omdbHost: https://www.omdbapi.com
    #    $omdbToken: 28c5b7b1

    App\EventListener\MovieListener:
        tags:
        - { name: 'doctrine.orm.event_listener', event: 'postPersist', entity: 'App\Entity\Movie' }
        #- { name: 'doctrine.orm.event_listener', event: 'postUpdate', entity: 'App\Entity\Movie' }

